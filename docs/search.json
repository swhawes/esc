[
  {
    "objectID": "index.html#table-2-continuous-outcomes-by-setting",
    "href": "index.html#table-2-continuous-outcomes-by-setting",
    "title": "ESC-Revalidation",
    "section": "Table 2: Continuous Outcomes by Setting",
    "text": "Table 2: Continuous Outcomes by Setting"
  },
  {
    "objectID": "index.html#table-3-categorical-outcomes-by-setting",
    "href": "index.html#table-3-categorical-outcomes-by-setting",
    "title": "ESC-Revalidation",
    "section": "Table 3: Categorical Outcomes by Setting",
    "text": "Table 3: Categorical Outcomes by Setting"
  },
  {
    "objectID": "index.html#just-retesting-table-3-categorical-outcomes-by-setting",
    "href": "index.html#just-retesting-table-3-categorical-outcomes-by-setting",
    "title": "ESC-Revalidation",
    "section": "JUST RETESTING (Table 3: Categorical Outcomes by Setting)",
    "text": "JUST RETESTING (Table 3: Categorical Outcomes by Setting)\n\n\nCode\n# Function to clean up factor levels\nclean_levels &lt;- function(factor_var) {\n  levels(factor_var) &lt;- levels(factor_var) %&gt;%\n    str_replace_all(\"[^[:alnum:]]+\", \"_\") %&gt;%\n    str_trim() %&gt;%\n    str_to_title() %&gt;%\n    str_replace_all(\"_+\", \"_\") %&gt;%\n    str_replace_all(\"_$\", \"\") %&gt;%\n    str_sub(1, 30)  # Optional: shorten levels to 30 characters max\n  return(factor_var)\n}\n\n# Apply the function to clean up levels of all factor variables\ncleaned_factors &lt;- factor_vars %&gt;%\n  mutate(across(where(is.factor), clean_levels))\n\n# Add the 'setting' variable back to the cleaned factor data frame\ncleaned_factors &lt;- cleaned_factors %&gt;%\n  mutate(setting = merged_clean$setting)\n\n# Ensure that the 'setting' variable is a factor\ncleaned_factors$setting &lt;- as.factor(cleaned_factors$setting)\n\n# Create a summary table for cleaned factor variables with &lt;= 20 levels\nfactor_summary_table &lt;- tbl_summary(\n  data = cleaned_factors,\n  by = \"setting\",\n  missing = \"no\",\n  statistic = list(\n    all_categorical() ~ \"{n} ({p}%)\"\n  )\n) %&gt;%\n  add_p() %&gt;%\n  bold_labels() %&gt;%\n  modify_header(label ~ \"**Variable**\") %&gt;%\n  modify_caption(\"**Table 2: Descriptive Statistics for Factor Variables with â‰¤ 20 Levels by Setting**\") %&gt;%\n  modify_footnote(\n    all_stat_cols() ~ \"N (%) for categorical variables\"\n  )\n\n# Convert the gtsummary table to a data frame\nfactor_summary_table_df &lt;- as_tibble(factor_summary_table, col_labels = TRUE)\n\n# Rename columns to match expected names\ncolnames(factor_summary_table_df) &lt;- c(\"Variable\", \"C\", \"R\", \"p_value\")\n\n# Render the table using DT with enhanced aesthetics\ndatatable(\n  factor_summary_table_df,\n  extensions = 'Buttons',\n  options = list(\n    dom = 'Bfrtip',\n    buttons = list(\n      'copy', 'csv', 'excel', 'pdf', 'print'\n    ),\n    pageLength = 10,\n    autoWidth = TRUE,\n    columnDefs = list(\n      list(width = '300px', targets = 0),  # Set a fixed width for the first column\n      list(className = 'dt-center', targets = '_all')\n    ),\n    stripeClasses = c('stripe1', 'stripe2')\n  ),\n  class = 'cell-border stripe hover'\n) %&gt;% formatStyle(\n  'p_value', target = 'row',\n  backgroundColor = styleInterval(0.05, c('white', 'yellow')),\n  fontWeight = styleInterval(0.05, c('normal', 'bold'))\n) %&gt;% formatStyle(\n  columns = c('Variable', 'C', 'R', 'p_value'),\n  fontSize = '12px',\n  fontFamily = 'Arial'\n) %&gt;% formatStyle(\n  'Variable',\n  whiteSpace = 'normal',\n  wordWrap = 'break-word'\n)\n\n\n\n\n\n\nCode\n# Save the DT output as an HTML file\nsaveWidget(\n  datatable(\n    factor_summary_table_df,\n    extensions = 'Buttons',\n    options = list(\n      dom = 'Bfrtip',\n      buttons = list(\n        'copy', 'csv', 'excel', 'pdf', 'print'\n      ),\n      pageLength = 10,\n      autoWidth = TRUE,\n      columnDefs = list(\n        list(width = '300px', targets = 0),  # Set a fixed width for the first column\n        list(className = 'dt-center', targets = '_all')\n      ),\n      stripeClasses = c('stripe1', 'stripe2')\n    ),\n    class = 'cell-border stripe hover'\n  ) %&gt;% formatStyle(\n    'p_value', target = 'row',\n    backgroundColor = styleInterval(0.05, c('white', 'yellow')),\n    fontWeight = styleInterval(0.05, c('normal', 'bold'))\n  ) %&gt;% formatStyle(\n    columns = c('Variable', 'C', 'R', 'p_value'),\n    fontSize = '12px',\n    fontFamily = 'Arial'\n  ) %&gt;% formatStyle(\n    'Variable',\n    whiteSpace = 'normal',\n    wordWrap = 'break-word'\n  ),\n  \"factor_summary_table.html\"\n)"
  }
]